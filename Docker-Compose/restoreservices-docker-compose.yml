version: '3.7'
networks:
  restorecommerce:
volumes:
  kafka_data:
  redis_data:
  arangodb_data:
  aragodb_apps_data:
  minio_data:
  elasticsearch_data:
services:
  # Identity service
  identity:
    container_name: restorecommerce_identity_srv
    hostname: identity-srv
    image: restorecommerce/identity-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50051:50051"
    depends_on:
      - arangodb
      - kafka
      # - console
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      # - console:restorecommerce-console
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"
      authorization__enabled: "false"

  # Notification service
  notification:
    container_name: restorecommerce_notification_srv
    hostname: notification-srv
    image: restorecommerce/notification-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50052:50051"
    depends_on:
      - kafka
      - elasticsearch
      - redis
    links:
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"
  
  # Object storage service
  ostorage:
    container_name: restorecommerce_ostorage_srv
    hostname: ostorage-srv
    image: restorecommerce/ostorage-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50066:50051"
    depends_on:
      - minio
      - kafka
      - elasticsearch
      - redis
    links:
      - minio:minio
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"
  
  # Object storage service
  ordering:
    container_name: restorecommerce_ordering_srv
    hostname: ordering-srv
    image: restorecommerce/ordering-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50065:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"
  
  # Object storage service
  catalog:
    container_name: restorecommerce_catalog_srv
    hostname: catalog-srv
    image: restorecommerce/catalog-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50068:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"

  # Resource service
  resource:
    container_name: restorecommerce_resource_srv
    hostname: resource-srv
    image: restorecommerce/resource-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50053:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - kafka:kafka
      - arangodb:arangodb
      - redis:redis
      - elasticsearch:elasticsearch
    environment:
      NODE_ENV: "production"

  # Facade service
  facade:
    container_name: restorecommerce_facade_srv
    hostname: facade-srv
    image: restorecommerce/facade-srv:latest
    networks:
      - restorecommerce
    ports:
      - "5000:5000"
    depends_on:
      - identity
      - resource
      - notification
      - rendering
      - redis
#      - indexing
      - access
      - kafka
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - identity:identity-srv
      - kafka:kafka
      - notification:notification-srv
      - resource:resource-srv
      - redis:redis
      - rendering:rendering-srv
#      - indexing:indexing-srv
      - access:access-control-srv
      - scheduling:scheduling-srv
      - ostorage:ostorage-srv
      - ordering:ordering-srv
      - catalog:catalog-srv
      - fulfillment:fulfillment-srv
    environment:
      NODE_ENV: "production"

  # Scheduling service
  scheduling:
    container_name: restorecommerce_scheduling_srv
    hostname: scheduling-srv
    image: restorecommerce/scheduling-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50054:50051"
    depends_on:
      - redis
      - kafka
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - kafka:kafka
      - redis:redis
    environment:
      NODE_ENV: "production"

  # Rendering service
  rendering:
    container_name: restorecommerce_rendering_srv
    hostname: rendering-srv
    image: restorecommerce/rendering-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50057:50051"
    depends_on:
      - kafka
      - elasticsearch
      - redis
      # - console
    links:
      - kafka:kafka
      # - console:restorecommerce-console
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"

  # Indexing service
#  indexing:
#    container_name: restorecommerce_indexing_srv
#    hostname: indexing-srv
#    image: restorecommerce/indexing-srv:latest
#    ports:
#      - "50051"
#    depends_on:
#      - kafka
#      - elasticsearch
#      - redis
#      - resource
#    links:
#      - kafka:kafka
#      - elasticsearch:elasticsearch
#      - redis:redis
#      - resource:resource-srv
#      - access:access-control-srv
#    environment:
#      NODE_ENV: "production"
#    healthcheck:
#      test: "exit 0"

  # access control service
  access:
    container_name: restorecommerce_access_control_srv
    hostname: access-control-srv
    image: restorecommerce/access-control-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50061:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"

  # PDF rendering service
  pdf_render:
    container_name: restorecommerce_pdf_render_srv
    hostname: pdf-render-srv
    networks:
      - restorecommerce
    image: restorecommerce/pdf-rendering-srv:latest
    # links:
    #   - console:restorecommerce-console
    ports:
      - "3001:9000"
    environment:
      ALLOW_HTTP: "true"
      API_TOKENS: "VBYmqRQxvXlmLyQc5jz5ASxVbYUqJMhM"

  # fulfillment service
  fulfillment:
    container_name: restorecommerce_fulfillment_srv
    hostname: fulfillment-srv
    image: restorecommerce/fulfillment-srv:latest
    networks:
      - restorecommerce
    ports:
      - "50067:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: "production"

  # static content server / web console (currently not implemented for RC)
  # console:
  #   hostname: restorecommerce-console
  #   container_name: restorecommerce_nginx
  #   image: nginx:latest
  #   ports:
  #     - "80:8080"
  #   environment:
  #     NGINX_PORT: 8080
  #   volumes:
  #     - ./build/console/dist/:/usr/share/nginx/html/dist/
  #     - ./nginx.template:/etc/nginx/conf.d/nginx.template
  #   command:
  #     /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  #   healthcheck:
  #     test: "exit 0"
