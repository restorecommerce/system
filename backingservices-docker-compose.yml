version: '3.7'

networks:
  test:
    driver: bridge

services:
  # Zookeeper
  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: zookeeper:3.5.5
    ports:
      - "2181:2181"
    networks:
      - test
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka
  kafka:
    container_name: kafka
    image: bitnami/kafka:2.3.0
    hostname: localhost
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - test
    environment:
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CFG_LOG_RETENTION_HOURS: -1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: "exit 0"

  # redis
  redis:
    container_name: redis
    hostname: redis
    image: redis:5.0-rc-alpine
    ports:
      - "6379:6379"
    networks:
      - test
    healthcheck:
      test: "exit 0"

  # arangodb
  arangodb:
    container_name: arangodb
    image: arangodb/arangodb:3.3.14
    hostname: arangodb
    ports:
      - "8529:8529"
    networks:
      - test
    environment:
      ARANGO_NO_AUTH: 1
    healthcheck:
      test: "exit 0"

  # minio
  minio:
    container_name: minio
    hostname: minio
    image: minio/minio:RELEASE.2019-07-17T22-54-12Z
    volumes:
      - ./ostorage:/data
    ports:
      - "9000:9000"
    networks:
      - test
    environment:
      MINIO_ACCESS_KEY: accessKey
      MINIO_SECRET_KEY: secretKey
    deploy:
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
    command: server /data
