version: '3.7'
networks:
  restorecommerce:
volumes:
  kafka_data:
  zookeeper_data:
  redis_data:
  arangodb_data:
  aragodb_apps_data:
  minio_data:
  elasticsearch_data:
services:
  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: bitnami/zookeeper:3.6.1
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - restorecommerce
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.0.0
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - restorecommerce
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: LISTENER_LOCAL://:29092,LISTENER_DOCKER://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_LOCAL://localhost:29092,LISTENER_DOCKER://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_LOCAL:PLAINTEXT,LISTENER_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CFG_LOG_RETENTION_HOURS: -1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: "exit 0"
  redis:
    container_name: redis
    hostname: redis
    image: redis:alpine3.15
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restorecommerce
    healthcheck:
      test: "exit 0"
  arangodb:
    container_name: arangodb
    image: arangodb/arangodb:3.8.4
    hostname: arangodb
    ports:
      - "8529:8529"
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - aragodb_apps_data:/var/lib/arangodb3-apps
    networks:
      - restorecommerce
    environment:
      ARANGO_NO_AUTH: 1
    healthcheck:
      test: "exit 0"
  minio:
    container_name: minio
    hostname: minio
    image: minio/minio:RELEASE.2022-01-08T03-11-54Z
    ports:
      - "9000:9000"
    networks:
      - restorecommerce
    environment:
      MINIO_ACCESS_KEY: accessKey
      MINIO_SECRET_KEY: secretKey
    volumes:
      - minio_data:/data
    command: server /data
  elasticsearch:
    container_name: restorecommerce_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    hostname: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - restorecommerce
    environment:
      - cluster.name=cluster
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: "exit 0"
  kibana:
    container_name: restorecommerce_kibana
    image: docker.elastic.co/kibana/kibana:7.16.2
    hostname: kibana
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - restorecommerce
    depends_on:
      - elasticsearch
    healthcheck:
      test: "exit 0"
