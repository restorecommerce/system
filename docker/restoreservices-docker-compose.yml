networks:
  restorecommerce:
volumes:
  kafka_data:
  redis_data:
  arangodb_data:
  aragodb_apps_data:
  cloudserver_data:
  cloudserver_metadata:
  elasticsearch_data:
services:
  # Identity service
  identity-srv:
    container_name: restorecommerce_identity_srv
    hostname: identity-srv
    image: ghcr.io/restorecommerce/identity-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50051:50051"
    depends_on:
      - arangodb
      - kafka
      # - console
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      # - console:restorecommerce-console
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Notification service
  notification-srv:
    container_name: restorecommerce_notification_srv
    hostname: notification-srv
    image: ghcr.io/restorecommerce/notification-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50052:50051"
    depends_on:
      - kafka
      - elasticsearch
      - redis
    links:
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Object storage service
  ostorage-srv:
    container_name: restorecommerce_ostorage_srv
    hostname: ostorage-srv
    image: ghcr.io/restorecommerce/ostorage-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50066:50051"
    depends_on:
      - cloudserver
      - kafka
      - elasticsearch
      - redis
    links:
      - cloudserver:cloudserver
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Object storage service
  ordering-srv:
    container_name: restorecommerce_ordering_srv
    hostname: ordering-srv
    image: ghcr.io/restorecommerce/ordering-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50065:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Object storage service
  catalog-srv:
    container_name: restorecommerce_catalog_srv
    hostname: catalog-srv
    image: ghcr.io/restorecommerce/catalog-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50068:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Resource service
  resource-srv:
    container_name: restorecommerce_resource_srv
    hostname: master-data-srv
    image: ghcr.io/restorecommerce/resource-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50053:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - kafka:kafka
      - arangodb:arangodb
      - redis:redis
      - elasticsearch:elasticsearch
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Facade service
  facade-srv:
    container_name: restorecommerce_facade_srv
    hostname: facade-srv
    image: ghcr.io/restorecommerce/facade-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "5000:5000"
    depends_on:
      - identity-srv
      - resource-srv
      - notification-srv
      - rendering-srv
      - redis
      - access-control-srv
      - kafka
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - identity-srv:identity-srv
      - kafka:kafka
      - notification-srv:notification-srv
      - resource-srv:master-data-srv
      - redis:redis
      - rendering-srv:rendering-srv
      - access-control-srv:access-control-srv
      - scheduling-srv:scheduling-srv
      - ostorage-srv:ostorage-srv
      - ordering-srv:ordering-srv
      - catalog-srv:catalog-srv
      - fulfillment-srv:fulfillment-srv
      - invoicing-srv:invoicing-srv
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Scheduling service
  scheduling-srv:
    container_name: restorecommerce_scheduling_srv
    hostname: scheduling-srv
    image: ghcr.io/restorecommerce/scheduling-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50054:50051"
      - "3000:3000"
    depends_on:
      - redis
      - kafka
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - kafka:kafka
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # Rendering service
  rendering-srv:
    container_name: restorecommerce_rendering_srv
    hostname: rendering-srv
    image: ghcr.io/restorecommerce/rendering-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50057:50051"
    depends_on:
      - kafka
      - elasticsearch
      - redis
      # - console
    links:
      - kafka:kafka
      # - console:restorecommerce-console
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # access control service
  access-control-srv:
    container_name: restorecommerce_access_control_srv
    hostname: access-control-srv
    image: ghcr.io/restorecommerce/access-control-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50061:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV
      redis__offsetStoreInterval: 15000

  # PDF rendering service
  pdf-rendering-srv:
    container_name: restorecommerce_pdf_render_srv
    hostname: pdf-rendering-srv
    networks:
      - restorecommerce
    image: ghcr.io/restorecommerce/pdf-rendering-srv:latest
    restart: always
    # links:
    #   - console:restorecommerce-console
    ports:
      - "3001:50051"
    environment:
      ALLOW_HTTP: "true"
      API_TOKENS: "VBYmqRQxvXlmLyQc5jz5ASxVbYUqJMhM"

  # fulfillment service
  fulfillment-srv:
    container_name: restorecommerce_fulfillment_srv
    hostname: fulfillment-srv
    image: ghcr.io/restorecommerce/fulfillment-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50067:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV    
  
  # invoicing-srv
  invoicing-srv:
    container_name: restorecommerce_invoicing_srv
    hostname: invoicing-srv
    image: ghcr.io/restorecommerce/invoicing-srv:latest
    restart: always
    networks:
      - restorecommerce
    ports:
      - "50069:50051"
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - redis
    links:
      - arangodb:arangodb
      - kafka:kafka
      - elasticsearch:elasticsearch
      - redis:redis
    environment:
      NODE_ENV: $NODE_ENV

  # static content server / web console (currently not implemented for RC)
  # console:
  #   hostname: restorecommerce-console
  #   container_name: restorecommerce_nginx
  #   image: nginx:latest
  #   ports:
  #     - "80:8080"
  #   environment:
  #     NGINX_PORT: 8080
  #   volumes:
  #     - ./build/console/dist/:/usr/share/nginx/html/dist/
  #     - ./nginx.template:/etc/nginx/conf.d/nginx.template
  #   command:
  #     /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  #   healthcheck:
  #     test: "exit 0"

# Data
  data:
    container_name: restorecommerce_data
    hostname: data
    image: ghcr.io/restorecommerce/data:latest
    networks:
      - restorecommerce
    links:
      - facade-srv:facade-srv
    environment:
      NODE_ENV: $NODE_ENV